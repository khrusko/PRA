@using UI.Models
@model ContactFormVM

@{
  ViewBag.Title = "Kontaktirajte nas";
}

<h4>Kontaktirajte nas</h4>
<hr />

@using (Html.BeginForm(actionName: "ContactUs", controllerName: "Home", method: FormMethod.Post)) {
  @Html.AntiForgeryToken()

  <div class="mb-3">
    @Html.LabelFor(expression: model => model.FName, htmlAttributes: new { @class = "form-label" })
    @Html.TextBoxFor(expression: model => model.FName, htmlAttributes: new { @class = "form-control" })
    @Html.ValidationMessageFor(expression: model => model.FName)
  </div>

  <div class="mb-3">
    @Html.LabelFor(expression: model => model.LName, htmlAttributes: new { @class = "form-label" })
    @Html.TextBoxFor(expression: model => model.LName, htmlAttributes: new { @class = "form-control" })
    @Html.ValidationMessageFor(expression: model => model.LName)
  </div>

  <div class="mb-3 ">
    @Html.LabelFor(expression: model => model.Email, htmlAttributes: new { @class = "form-label" })
    @Html.TextBoxFor(expression: model => model.Email, htmlAttributes: new { @class = "form-control" })
    @Html.ValidationMessageFor(expression: model => model.Email)
  </div>

  <div class="mb-3">
    @Html.LabelFor(expression: model => model.Message, htmlAttributes: new { @class = "form-label" })
    @Html.TextAreaFor(expression: model => model.Message, htmlAttributes: new { @class = "form-control" })
    @Html.ValidationMessageFor(expression: model => model.Message)
  </div>



  <div class="d-flex justify-content-end">
    @Html.ActionLink(linkText: "Odustani",
                   actionName: "Index",
                   controllerName: "Home",
                   routeValues: new { },
                   htmlAttributes: new { @class = "btn btn-outline-secondary  me-3" })
    <button type="submit" class="btn btn-primary">Pošalji</button>
  </div>
}